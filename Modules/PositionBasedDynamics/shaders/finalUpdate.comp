#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(std430, binding = 0) buffer positionBuffer
{
        vec4 position[];
};

layout(std430, binding = 1) buffer positionBufferTmp
{
        vec4 positionTmp[];
};

layout(std430, binding = 2) buffer velocityBuffer
{
        vec4 velocity[];
};

uniform float dt;

void main()
{
    uint X = gl_GlobalInvocationID.x;
    uint Y = gl_GlobalInvocationID.y;
    uint resX = gl_NumWorkGroups.x * gl_WorkGroupSize.x;
    uint IDX = Y * resX + X;

    velocity[IDX].xyz = (positionTmp[IDX].xyz - position[IDX].xyz) / dt;
    position[IDX].xyz = positionTmp[IDX].xyz;
}
