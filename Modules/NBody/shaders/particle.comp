#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(std430, binding = 0) buffer dataBuffer
{
    vec4 particleData[];
};

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

const float dt = 1e-5;
const float eps = 2.0;
const float G = 6.67384e1;

void main()
{
    uint gid = gl_GlobalInvocationID.x;
    vec2 F = vec2 (0.0);
    uint threadCount = gl_NumWorkGroups.x * gl_WorkGroupSize.x;

    for (uint i = 0; i < threadCount; ++i) {
        if (i != gid) {
            vec2 r = particleData[i].xy - particleData[gid].xy;
            float l = length (r);
            F += r / pow (l*l + eps*eps, 1.5);
        }
    }
    F *= G;

    vec2 vel = particleData[gid].zw + F * dt;
    vec2 pos = particleData[gid].xy + vel * dt;

    particleData[gid] = vec4 (pos, vel);
}
